version: '3.8'

services:

  frontend:
    image: ghcr.io/rahulgopathi/newschatbot-fe:latest
    container_name: newschatbot-frontend
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - newschatbot_network
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    environment:
      - VITE_BACKEND_API_URL=http://api:8000
  api:
    image: ghcr.io/rahulgopathi/newschatbot-be:latest
    container_name: newschatbot_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - VECTOR_STORE_HOST=qdrant
      - VECTOR_STORE_PORT=6333
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - JINA_API_KEY=${JINA_API_KEY}
    depends_on:
      - redis
      - qdrant
    restart: unless-stopped
    networks:
      - newschatbot_network

  redis:
    image: redis:latest
    container_name: newschatbot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - newschatbot_network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: newschatbot_qdrant
    ports:
      - "6333:6333"
      - "6334:6334"  # gRPC port
    volumes:
      - qdrant_data:/qdrant/storage
    restart: unless-stopped
    environment:
      - QDRANT_ALLOW_ANONYMOUS_WRITES=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - newschatbot_network

networks:
  newschatbot_network:
    driver: bridge

volumes:
  redis_data:
  qdrant_data: 